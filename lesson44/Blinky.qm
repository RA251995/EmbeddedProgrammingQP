<?xml version="1.0" encoding="UTF-8"?>
<model version="6.0.0" links="1">
 <!--${qpc}-->
 <framework name="qpc"/>
 <!--${Shared}-->
 <package name="Shared" stereotype="0x00">
  <!--${Shared::BlinkySignals}-->
  <attribute name="BlinkySignals" type="enum" visibility="0x04" properties="0x00">
   <code>{
    TIMEOUT_SIG = Q_USER_SIG,
};</code>
  </attribute>
  <!--${Shared::AO_Blinky}-->
  <attribute name="AO_Blinky" type="QActive * const" visibility="0x00" properties="0x00">
   <code>= &amp;Blinky_inst.super;</code>
  </attribute>
  <!--${Shared::Blinky_ctor}-->
  <operation name="Blinky_ctor" type="void" visibility="0x00" properties="0x01">
   <documentation>The Blinky &quot;constructor&quot; is provided outside of the Blinky class, so that it can be used independently from the class. This is part of the &quot;opaque pointer&quot; design idiom.</documentation>
   <code>Blinky * const me = &amp;Blinky_inst;
QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Blinky_initial));
QTimeEvt_ctorX(&amp;me-&gt;timeEvt, &amp;me-&gt;super, TIMEOUT_SIG, 0U);</code>
  </operation>
 </package>
 <!--${AOs}-->
 <package name="AOs" stereotype="0x02">
  <!--${AOs::Blinky1}-->
  <class name="Blinky1" superclass="qpc::QActive">
   <!--${AOs::Blinky1::te}-->
   <attribute name="te" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky1::inst}-->
   <attribute name="inst" type="Blinky" visibility="0x00" properties="0x01"/>
   <!--${AOs::Blinky1::ctor}-->
   <operation name="ctor" type="void" visibility="0x00" properties="0x00">
    <code>QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Blinky1_initial));
QTimeEvt_ctorX(&amp;me-&gt;te, &amp;me-&gt;super, TIMEOUT_SIG, 0U);</code>
   </operation>
   <!--${AOs::Blinky1::SM}-->
   <statechart properties="0x03">
    <documentation>Blinky state machine</documentation>
    <!--${AOs::Blinky1::SM::initial}-->
    <initial target="../1">
     <action>QTimeEvt_armX(&amp;me-&gt;te, 1U, 1U);</action>
     <initial_glyph conn="2,3,5,1,37,6,-4">
      <action box="0,-2,31,4"/>
     </initial_glyph>
    </initial>
    <!--${AOs::Blinky1::SM::active}-->
    <state name="active">
     <!--${AOs::Blinky1::SM::active::TIMEOUT}-->
     <tran trig="TIMEOUT">
      <action>for (uint32_t volatile i = 1250U; i != 0U; --i)
{
    BSP_ledGreenOn();
    BSP_ledGreenOff();
}</action>
      <tran_glyph conn="2,13,3,-1,30">
       <action box="0,-2,30,13"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,7,33,18"/>
    </state>
    <state_diagram size="46,31"/>
   </statechart>
  </class>
  <!--${AOs::Blinky2}-->
  <class name="Blinky2" superclass="qpc::QActive">
   <!--${AOs::Blinky2::inst}-->
   <attribute name="inst" type="Blinky" visibility="0x00" properties="0x01"/>
   <!--${AOs::Blinky2::ctor}-->
   <operation name="ctor" type="void" visibility="0x00" properties="0x00">
    <code>QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Blinky2_initial));</code>
   </operation>
   <!--${AOs::Blinky2::SM}-->
   <statechart properties="0x03">
    <documentation>Blinky state machine</documentation>
    <!--${AOs::Blinky2::SM::initial}-->
    <initial target="../1">
     <initial_glyph conn="2,3,5,1,38,6,-3">
      <action box="0,-2,31,4"/>
     </initial_glyph>
    </initial>
    <!--${AOs::Blinky2::SM::active}-->
    <state name="active">
     <!--${AOs::Blinky2::SM::active::BUTTON_PRESSED}-->
     <tran trig="BUTTON_PRESSED">
      <action>for (uint32_t volatile i = 1250U * 3U; i != 0U; --i)
{
    BSP_ledYellowOn();
    BSP_ledYellowOff();
}</action>
      <tran_glyph conn="2,13,3,-1,30">
       <action box="0,-2,34,12"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,7,35,18"/>
    </state>
    <state_diagram size="46,31"/>
   </statechart>
  </class>
 </package>
 <!--${.}-->
 <directory name=".">
  <!--${.::blinky1_fsm.c}-->
  <file name="blinky1_fsm.c">
   <text>$declare${AOs::Blinky1}
$define${AOs::Blinky1}</text>
  </file>
  <!--${.::blinky2_fsm.c}-->
  <file name="blinky2_fsm.c">
   <text>$declare${AOs::Blinky2}
$define${AOs::Blinky2}</text>
  </file>
 </directory>
</model>
